management.endpoints.web.exposure.include=*

# Good for demonstrating health details:
#management.endpoint.health.show-details=always

# Good for demonstrating grouping of health indicators:
#management.endpoint.health.group.external.include=db
#management.endpoint.health.group.internal.include=diskSpace,ping

# Spring Boot should autoconfigure the CloudWatch MeterRegistry, but it doesn't:
#management.metrics.export.cloudwatch.namespace=SpringBootApp
#management.metrics.export.cloudwatch.batchSize=10

# A way to turn off unnecessary metrics:
spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration

# Or, you can turn off specific metrics:
management.metrics.enable.jvm.buffer=false
management.metrics.enable.jvm.classes=false
management.metrics.enable.jvm.gc=false
management.metrics.enable.jvm.memory.committed=false
management.metrics.enable.jvm.memory.max=false
management.metrics.enable.jvm.memory.usage=false
management.metrics.enable.jvm.threads=false
management.metrics.enable.executor=false
management.metrics.enable.disk=false
management.metrics.enable.application=false


